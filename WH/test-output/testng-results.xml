<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="11" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-16T06:01:41Z" name="Suite" finished-at="2021-03-16T06:07:15Z" duration-ms="333451">
    <groups>
    </groups>
    <test started-at="2021-03-16T06:01:41Z" name="Test" finished-at="2021-03-16T06:07:15Z" duration-ms="333451">
      <class name="Tests.UPPDistributors">
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.UPPDistributors@792b749c]" started-at="2021-03-16T06:03:48Z" name="PreConditon" finished-at="2021-03-16T06:04:01Z" duration-ms="12721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="UPPDistributor()[pri:0, instance:Tests.UPPDistributors@792b749c]" started-at="2021-03-16T06:04:01Z" name="UPPDistributor" finished-at="2021-03-16T06:04:12Z" duration-ms="11051" status="FAIL">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<...> but was:<Super ...>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<...> but was:<Super ...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at POM.UPPDistributorsPOM.Distributors(UPPDistributorsPOM.java:150)
at Pages.UPPDistributorsPage.Distributors(UPPDistributorsPage.java:10)
at Tests.UPPDistributors.UPPDistributor(UPPDistributors.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UPPDistributor -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.UPPDistributors@792b749c]" started-at="2021-03-16T06:04:12Z" name="PostCondition" finished-at="2021-03-16T06:04:13Z" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UPPDistributor status=FAILURE method=UPPDistributors.UPPDistributor()[pri:0, instance:Tests.UPPDistributors@792b749c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.UPPDistributors -->
      <class name="Tests.SMSTemplates">
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.SMSTemplates@6d60fe40]" started-at="2021-03-16T06:03:27Z" name="PreConditon" finished-at="2021-03-16T06:03:39Z" duration-ms="11713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="Template()[pri:0, instance:Tests.SMSTemplates@6d60fe40]" started-at="2021-03-16T06:03:39Z" name="Template" finished-at="2021-03-16T06:03:48Z" duration-ms="9765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Template -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.SMSTemplates@6d60fe40]" started-at="2021-03-16T06:03:48Z" name="PostCondition" finished-at="2021-03-16T06:03:48Z" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Template status=SUCCESS method=SMSTemplates.Template()[pri:0, instance:Tests.SMSTemplates@6d60fe40] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.SMSTemplates -->
      <class name="Tests.Orders">
        <test-method is-config="true" signature="StartReport()[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:01:41Z" name="StartReport" finished-at="2021-03-16T06:01:42Z" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartReport -->
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:01:42Z" name="PreConditon" finished-at="2021-03-16T06:01:53Z" duration-ms="11889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="CreateOrder()[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:01:53Z" name="CreateOrder" finished-at="2021-03-16T06:02:38Z" duration-ms="44961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateOrder -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:02:38Z" name="PostCondition" finished-at="2021-03-16T06:02:39Z" duration-ms="586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateOrder status=SUCCESS method=Orders.CreateOrder()[pri:0, instance:Tests.Orders@43df23d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:02:39Z" name="PreConditon" finished-at="2021-03-16T06:02:49Z" duration-ms="10386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="WareHouseOrders()[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:02:49Z" name="WareHouseOrders" finished-at="2021-03-16T06:03:27Z" duration-ms="37255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WareHouseOrders -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Orders@43df23d3]" started-at="2021-03-16T06:03:27Z" name="PostCondition" finished-at="2021-03-16T06:03:27Z" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WareHouseOrders status=SUCCESS method=Orders.WareHouseOrders()[pri:0, instance:Tests.Orders@43df23d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.Orders -->
      <class name="Tests.UPPPayments">
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:04:13Z" name="PreConditon" finished-at="2021-03-16T06:04:23Z" duration-ms="10343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="KotakAvenueAborted()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:04:23Z" name="KotakAvenueAborted" finished-at="2021-03-16T06:04:49Z" duration-ms="26218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- KotakAvenueAborted -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:04:49Z" name="PostCondition" finished-at="2021-03-16T06:04:49Z" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=KotakAvenueAborted status=SUCCESS method=UPPPayments.KotakAvenueAborted()[pri:0, instance:Tests.UPPPayments@23e84203] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:04:49Z" name="PreConditon" finished-at="2021-03-16T06:05:00Z" duration-ms="10718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="KotakAvenueFailure()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:05:00Z" name="KotakAvenueFailure" finished-at="2021-03-16T06:05:42Z" duration-ms="42365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- KotakAvenueFailure -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:05:42Z" name="PostCondition" finished-at="2021-03-16T06:05:43Z" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=KotakAvenueFailure status=SUCCESS method=UPPPayments.KotakAvenueFailure()[pri:0, instance:Tests.UPPPayments@23e84203] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:05:43Z" name="PreConditon" finished-at="2021-03-16T06:05:57Z" duration-ms="14112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="KotakAvenueSucess()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:05:57Z" name="KotakAvenueSucess" finished-at="2021-03-16T06:06:36Z" duration-ms="39503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- KotakAvenueSucess -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:06:36Z" name="PostCondition" finished-at="2021-03-16T06:06:36Z" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=KotakAvenueSucess status=SUCCESS method=UPPPayments.KotakAvenueSucess()[pri:0, instance:Tests.UPPPayments@23e84203] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method is-config="true" signature="PreConditon()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:06:36Z" name="PreConditon" finished-at="2021-03-16T06:06:47Z" duration-ms="10723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method signature="RazorPay()[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:06:47Z" name="RazorPay" finished-at="2021-03-16T06:07:15Z" duration-ms="27466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RazorPay -->
        <test-method is-config="true" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.UPPPayments@23e84203]" started-at="2021-03-16T06:07:15Z" name="PostCondition" finished-at="2021-03-16T06:07:15Z" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RazorPay status=SUCCESS method=UPPPayments.RazorPay()[pri:0, instance:Tests.UPPPayments@23e84203] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.UPPPayments -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
